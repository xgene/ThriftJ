/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.github.xgene.thriftj.service;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-06-20")
public class VehicleStatus implements org.apache.thrift.TBase<VehicleStatus, VehicleStatus._Fields>, java.io.Serializable, Cloneable, Comparable<VehicleStatus> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("VehicleStatus");

  private static final org.apache.thrift.protocol.TField VEHICLED_FIELD_DESC = new org.apache.thrift.protocol.TField("vehicled", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField ADDRD_FIELD_DESC = new org.apache.thrift.protocol.TField("addrd", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ADDRAME_FIELD_DESC = new org.apache.thrift.protocol.TField("addrame", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField MODELD_FIELD_DESC = new org.apache.thrift.protocol.TField("modeld", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField MESSAGE_CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("messageContent", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField MESSAGE_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("messageLevel", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField MESSAGE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("messageType", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField MESSAGE_DATA_FIELD_DESC = new org.apache.thrift.protocol.TField("messageData", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField UPD_DATETIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updDatetime", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField CARD_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("cardId", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField ITEM_SHORT_FIELD_DESC = new org.apache.thrift.protocol.TField("itemShort", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField DEPT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("deptId", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField DEPT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("deptName", org.apache.thrift.protocol.TType.STRING, (short)13);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new VehicleStatusStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new VehicleStatusTupleSchemeFactory();

  public java.lang.String vehicled; // required
  public java.lang.String addrd; // required
  public java.lang.String addrame; // required
  public java.lang.String modeld; // required
  public java.lang.String messageContent; // required
  public java.lang.String messageLevel; // required
  public java.lang.String messageType; // required
  public java.lang.String messageData; // required
  public java.lang.String updDatetime; // required
  public java.lang.String cardId; // required
  public java.lang.String itemShort; // required
  public java.lang.String deptId; // required
  public java.lang.String deptName; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    VEHICLED((short)1, "vehicled"),
    ADDRD((short)2, "addrd"),
    ADDRAME((short)3, "addrame"),
    MODELD((short)4, "modeld"),
    MESSAGE_CONTENT((short)5, "messageContent"),
    MESSAGE_LEVEL((short)6, "messageLevel"),
    MESSAGE_TYPE((short)7, "messageType"),
    MESSAGE_DATA((short)8, "messageData"),
    UPD_DATETIME((short)9, "updDatetime"),
    CARD_ID((short)10, "cardId"),
    ITEM_SHORT((short)11, "itemShort"),
    DEPT_ID((short)12, "deptId"),
    DEPT_NAME((short)13, "deptName");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // VEHICLED
          return VEHICLED;
        case 2: // ADDRD
          return ADDRD;
        case 3: // ADDRAME
          return ADDRAME;
        case 4: // MODELD
          return MODELD;
        case 5: // MESSAGE_CONTENT
          return MESSAGE_CONTENT;
        case 6: // MESSAGE_LEVEL
          return MESSAGE_LEVEL;
        case 7: // MESSAGE_TYPE
          return MESSAGE_TYPE;
        case 8: // MESSAGE_DATA
          return MESSAGE_DATA;
        case 9: // UPD_DATETIME
          return UPD_DATETIME;
        case 10: // CARD_ID
          return CARD_ID;
        case 11: // ITEM_SHORT
          return ITEM_SHORT;
        case 12: // DEPT_ID
          return DEPT_ID;
        case 13: // DEPT_NAME
          return DEPT_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.VEHICLED, new org.apache.thrift.meta_data.FieldMetaData("vehicled", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRD, new org.apache.thrift.meta_data.FieldMetaData("addrd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRAME, new org.apache.thrift.meta_data.FieldMetaData("addrame", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MODELD, new org.apache.thrift.meta_data.FieldMetaData("modeld", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MESSAGE_CONTENT, new org.apache.thrift.meta_data.FieldMetaData("messageContent", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MESSAGE_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("messageLevel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MESSAGE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("messageType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MESSAGE_DATA, new org.apache.thrift.meta_data.FieldMetaData("messageData", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPD_DATETIME, new org.apache.thrift.meta_data.FieldMetaData("updDatetime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CARD_ID, new org.apache.thrift.meta_data.FieldMetaData("cardId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ITEM_SHORT, new org.apache.thrift.meta_data.FieldMetaData("itemShort", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEPT_ID, new org.apache.thrift.meta_data.FieldMetaData("deptId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEPT_NAME, new org.apache.thrift.meta_data.FieldMetaData("deptName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(VehicleStatus.class, metaDataMap);
  }

  public VehicleStatus() {
  }

  public VehicleStatus(
    java.lang.String vehicled,
    java.lang.String addrd,
    java.lang.String addrame,
    java.lang.String modeld,
    java.lang.String messageContent,
    java.lang.String messageLevel,
    java.lang.String messageType,
    java.lang.String messageData,
    java.lang.String updDatetime,
    java.lang.String cardId,
    java.lang.String itemShort,
    java.lang.String deptId,
    java.lang.String deptName)
  {
    this();
    this.vehicled = vehicled;
    this.addrd = addrd;
    this.addrame = addrame;
    this.modeld = modeld;
    this.messageContent = messageContent;
    this.messageLevel = messageLevel;
    this.messageType = messageType;
    this.messageData = messageData;
    this.updDatetime = updDatetime;
    this.cardId = cardId;
    this.itemShort = itemShort;
    this.deptId = deptId;
    this.deptName = deptName;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public VehicleStatus(VehicleStatus other) {
    if (other.isSetVehicled()) {
      this.vehicled = other.vehicled;
    }
    if (other.isSetAddrd()) {
      this.addrd = other.addrd;
    }
    if (other.isSetAddrame()) {
      this.addrame = other.addrame;
    }
    if (other.isSetModeld()) {
      this.modeld = other.modeld;
    }
    if (other.isSetMessageContent()) {
      this.messageContent = other.messageContent;
    }
    if (other.isSetMessageLevel()) {
      this.messageLevel = other.messageLevel;
    }
    if (other.isSetMessageType()) {
      this.messageType = other.messageType;
    }
    if (other.isSetMessageData()) {
      this.messageData = other.messageData;
    }
    if (other.isSetUpdDatetime()) {
      this.updDatetime = other.updDatetime;
    }
    if (other.isSetCardId()) {
      this.cardId = other.cardId;
    }
    if (other.isSetItemShort()) {
      this.itemShort = other.itemShort;
    }
    if (other.isSetDeptId()) {
      this.deptId = other.deptId;
    }
    if (other.isSetDeptName()) {
      this.deptName = other.deptName;
    }
  }

  public VehicleStatus deepCopy() {
    return new VehicleStatus(this);
  }

  @Override
  public void clear() {
    this.vehicled = null;
    this.addrd = null;
    this.addrame = null;
    this.modeld = null;
    this.messageContent = null;
    this.messageLevel = null;
    this.messageType = null;
    this.messageData = null;
    this.updDatetime = null;
    this.cardId = null;
    this.itemShort = null;
    this.deptId = null;
    this.deptName = null;
  }

  public java.lang.String getVehicled() {
    return this.vehicled;
  }

  public VehicleStatus setVehicled(java.lang.String vehicled) {
    this.vehicled = vehicled;
    return this;
  }

  public void unsetVehicled() {
    this.vehicled = null;
  }

  /** Returns true if field vehicled is set (has been assigned a value) and false otherwise */
  public boolean isSetVehicled() {
    return this.vehicled != null;
  }

  public void setVehicledIsSet(boolean value) {
    if (!value) {
      this.vehicled = null;
    }
  }

  public java.lang.String getAddrd() {
    return this.addrd;
  }

  public VehicleStatus setAddrd(java.lang.String addrd) {
    this.addrd = addrd;
    return this;
  }

  public void unsetAddrd() {
    this.addrd = null;
  }

  /** Returns true if field addrd is set (has been assigned a value) and false otherwise */
  public boolean isSetAddrd() {
    return this.addrd != null;
  }

  public void setAddrdIsSet(boolean value) {
    if (!value) {
      this.addrd = null;
    }
  }

  public java.lang.String getAddrame() {
    return this.addrame;
  }

  public VehicleStatus setAddrame(java.lang.String addrame) {
    this.addrame = addrame;
    return this;
  }

  public void unsetAddrame() {
    this.addrame = null;
  }

  /** Returns true if field addrame is set (has been assigned a value) and false otherwise */
  public boolean isSetAddrame() {
    return this.addrame != null;
  }

  public void setAddrameIsSet(boolean value) {
    if (!value) {
      this.addrame = null;
    }
  }

  public java.lang.String getModeld() {
    return this.modeld;
  }

  public VehicleStatus setModeld(java.lang.String modeld) {
    this.modeld = modeld;
    return this;
  }

  public void unsetModeld() {
    this.modeld = null;
  }

  /** Returns true if field modeld is set (has been assigned a value) and false otherwise */
  public boolean isSetModeld() {
    return this.modeld != null;
  }

  public void setModeldIsSet(boolean value) {
    if (!value) {
      this.modeld = null;
    }
  }

  public java.lang.String getMessageContent() {
    return this.messageContent;
  }

  public VehicleStatus setMessageContent(java.lang.String messageContent) {
    this.messageContent = messageContent;
    return this;
  }

  public void unsetMessageContent() {
    this.messageContent = null;
  }

  /** Returns true if field messageContent is set (has been assigned a value) and false otherwise */
  public boolean isSetMessageContent() {
    return this.messageContent != null;
  }

  public void setMessageContentIsSet(boolean value) {
    if (!value) {
      this.messageContent = null;
    }
  }

  public java.lang.String getMessageLevel() {
    return this.messageLevel;
  }

  public VehicleStatus setMessageLevel(java.lang.String messageLevel) {
    this.messageLevel = messageLevel;
    return this;
  }

  public void unsetMessageLevel() {
    this.messageLevel = null;
  }

  /** Returns true if field messageLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetMessageLevel() {
    return this.messageLevel != null;
  }

  public void setMessageLevelIsSet(boolean value) {
    if (!value) {
      this.messageLevel = null;
    }
  }

  public java.lang.String getMessageType() {
    return this.messageType;
  }

  public VehicleStatus setMessageType(java.lang.String messageType) {
    this.messageType = messageType;
    return this;
  }

  public void unsetMessageType() {
    this.messageType = null;
  }

  /** Returns true if field messageType is set (has been assigned a value) and false otherwise */
  public boolean isSetMessageType() {
    return this.messageType != null;
  }

  public void setMessageTypeIsSet(boolean value) {
    if (!value) {
      this.messageType = null;
    }
  }

  public java.lang.String getMessageData() {
    return this.messageData;
  }

  public VehicleStatus setMessageData(java.lang.String messageData) {
    this.messageData = messageData;
    return this;
  }

  public void unsetMessageData() {
    this.messageData = null;
  }

  /** Returns true if field messageData is set (has been assigned a value) and false otherwise */
  public boolean isSetMessageData() {
    return this.messageData != null;
  }

  public void setMessageDataIsSet(boolean value) {
    if (!value) {
      this.messageData = null;
    }
  }

  public java.lang.String getUpdDatetime() {
    return this.updDatetime;
  }

  public VehicleStatus setUpdDatetime(java.lang.String updDatetime) {
    this.updDatetime = updDatetime;
    return this;
  }

  public void unsetUpdDatetime() {
    this.updDatetime = null;
  }

  /** Returns true if field updDatetime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdDatetime() {
    return this.updDatetime != null;
  }

  public void setUpdDatetimeIsSet(boolean value) {
    if (!value) {
      this.updDatetime = null;
    }
  }

  public java.lang.String getCardId() {
    return this.cardId;
  }

  public VehicleStatus setCardId(java.lang.String cardId) {
    this.cardId = cardId;
    return this;
  }

  public void unsetCardId() {
    this.cardId = null;
  }

  /** Returns true if field cardId is set (has been assigned a value) and false otherwise */
  public boolean isSetCardId() {
    return this.cardId != null;
  }

  public void setCardIdIsSet(boolean value) {
    if (!value) {
      this.cardId = null;
    }
  }

  public java.lang.String getItemShort() {
    return this.itemShort;
  }

  public VehicleStatus setItemShort(java.lang.String itemShort) {
    this.itemShort = itemShort;
    return this;
  }

  public void unsetItemShort() {
    this.itemShort = null;
  }

  /** Returns true if field itemShort is set (has been assigned a value) and false otherwise */
  public boolean isSetItemShort() {
    return this.itemShort != null;
  }

  public void setItemShortIsSet(boolean value) {
    if (!value) {
      this.itemShort = null;
    }
  }

  public java.lang.String getDeptId() {
    return this.deptId;
  }

  public VehicleStatus setDeptId(java.lang.String deptId) {
    this.deptId = deptId;
    return this;
  }

  public void unsetDeptId() {
    this.deptId = null;
  }

  /** Returns true if field deptId is set (has been assigned a value) and false otherwise */
  public boolean isSetDeptId() {
    return this.deptId != null;
  }

  public void setDeptIdIsSet(boolean value) {
    if (!value) {
      this.deptId = null;
    }
  }

  public java.lang.String getDeptName() {
    return this.deptName;
  }

  public VehicleStatus setDeptName(java.lang.String deptName) {
    this.deptName = deptName;
    return this;
  }

  public void unsetDeptName() {
    this.deptName = null;
  }

  /** Returns true if field deptName is set (has been assigned a value) and false otherwise */
  public boolean isSetDeptName() {
    return this.deptName != null;
  }

  public void setDeptNameIsSet(boolean value) {
    if (!value) {
      this.deptName = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case VEHICLED:
      if (value == null) {
        unsetVehicled();
      } else {
        setVehicled((java.lang.String)value);
      }
      break;

    case ADDRD:
      if (value == null) {
        unsetAddrd();
      } else {
        setAddrd((java.lang.String)value);
      }
      break;

    case ADDRAME:
      if (value == null) {
        unsetAddrame();
      } else {
        setAddrame((java.lang.String)value);
      }
      break;

    case MODELD:
      if (value == null) {
        unsetModeld();
      } else {
        setModeld((java.lang.String)value);
      }
      break;

    case MESSAGE_CONTENT:
      if (value == null) {
        unsetMessageContent();
      } else {
        setMessageContent((java.lang.String)value);
      }
      break;

    case MESSAGE_LEVEL:
      if (value == null) {
        unsetMessageLevel();
      } else {
        setMessageLevel((java.lang.String)value);
      }
      break;

    case MESSAGE_TYPE:
      if (value == null) {
        unsetMessageType();
      } else {
        setMessageType((java.lang.String)value);
      }
      break;

    case MESSAGE_DATA:
      if (value == null) {
        unsetMessageData();
      } else {
        setMessageData((java.lang.String)value);
      }
      break;

    case UPD_DATETIME:
      if (value == null) {
        unsetUpdDatetime();
      } else {
        setUpdDatetime((java.lang.String)value);
      }
      break;

    case CARD_ID:
      if (value == null) {
        unsetCardId();
      } else {
        setCardId((java.lang.String)value);
      }
      break;

    case ITEM_SHORT:
      if (value == null) {
        unsetItemShort();
      } else {
        setItemShort((java.lang.String)value);
      }
      break;

    case DEPT_ID:
      if (value == null) {
        unsetDeptId();
      } else {
        setDeptId((java.lang.String)value);
      }
      break;

    case DEPT_NAME:
      if (value == null) {
        unsetDeptName();
      } else {
        setDeptName((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case VEHICLED:
      return getVehicled();

    case ADDRD:
      return getAddrd();

    case ADDRAME:
      return getAddrame();

    case MODELD:
      return getModeld();

    case MESSAGE_CONTENT:
      return getMessageContent();

    case MESSAGE_LEVEL:
      return getMessageLevel();

    case MESSAGE_TYPE:
      return getMessageType();

    case MESSAGE_DATA:
      return getMessageData();

    case UPD_DATETIME:
      return getUpdDatetime();

    case CARD_ID:
      return getCardId();

    case ITEM_SHORT:
      return getItemShort();

    case DEPT_ID:
      return getDeptId();

    case DEPT_NAME:
      return getDeptName();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case VEHICLED:
      return isSetVehicled();
    case ADDRD:
      return isSetAddrd();
    case ADDRAME:
      return isSetAddrame();
    case MODELD:
      return isSetModeld();
    case MESSAGE_CONTENT:
      return isSetMessageContent();
    case MESSAGE_LEVEL:
      return isSetMessageLevel();
    case MESSAGE_TYPE:
      return isSetMessageType();
    case MESSAGE_DATA:
      return isSetMessageData();
    case UPD_DATETIME:
      return isSetUpdDatetime();
    case CARD_ID:
      return isSetCardId();
    case ITEM_SHORT:
      return isSetItemShort();
    case DEPT_ID:
      return isSetDeptId();
    case DEPT_NAME:
      return isSetDeptName();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof VehicleStatus)
      return this.equals((VehicleStatus)that);
    return false;
  }

  public boolean equals(VehicleStatus that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_vehicled = true && this.isSetVehicled();
    boolean that_present_vehicled = true && that.isSetVehicled();
    if (this_present_vehicled || that_present_vehicled) {
      if (!(this_present_vehicled && that_present_vehicled))
        return false;
      if (!this.vehicled.equals(that.vehicled))
        return false;
    }

    boolean this_present_addrd = true && this.isSetAddrd();
    boolean that_present_addrd = true && that.isSetAddrd();
    if (this_present_addrd || that_present_addrd) {
      if (!(this_present_addrd && that_present_addrd))
        return false;
      if (!this.addrd.equals(that.addrd))
        return false;
    }

    boolean this_present_addrame = true && this.isSetAddrame();
    boolean that_present_addrame = true && that.isSetAddrame();
    if (this_present_addrame || that_present_addrame) {
      if (!(this_present_addrame && that_present_addrame))
        return false;
      if (!this.addrame.equals(that.addrame))
        return false;
    }

    boolean this_present_modeld = true && this.isSetModeld();
    boolean that_present_modeld = true && that.isSetModeld();
    if (this_present_modeld || that_present_modeld) {
      if (!(this_present_modeld && that_present_modeld))
        return false;
      if (!this.modeld.equals(that.modeld))
        return false;
    }

    boolean this_present_messageContent = true && this.isSetMessageContent();
    boolean that_present_messageContent = true && that.isSetMessageContent();
    if (this_present_messageContent || that_present_messageContent) {
      if (!(this_present_messageContent && that_present_messageContent))
        return false;
      if (!this.messageContent.equals(that.messageContent))
        return false;
    }

    boolean this_present_messageLevel = true && this.isSetMessageLevel();
    boolean that_present_messageLevel = true && that.isSetMessageLevel();
    if (this_present_messageLevel || that_present_messageLevel) {
      if (!(this_present_messageLevel && that_present_messageLevel))
        return false;
      if (!this.messageLevel.equals(that.messageLevel))
        return false;
    }

    boolean this_present_messageType = true && this.isSetMessageType();
    boolean that_present_messageType = true && that.isSetMessageType();
    if (this_present_messageType || that_present_messageType) {
      if (!(this_present_messageType && that_present_messageType))
        return false;
      if (!this.messageType.equals(that.messageType))
        return false;
    }

    boolean this_present_messageData = true && this.isSetMessageData();
    boolean that_present_messageData = true && that.isSetMessageData();
    if (this_present_messageData || that_present_messageData) {
      if (!(this_present_messageData && that_present_messageData))
        return false;
      if (!this.messageData.equals(that.messageData))
        return false;
    }

    boolean this_present_updDatetime = true && this.isSetUpdDatetime();
    boolean that_present_updDatetime = true && that.isSetUpdDatetime();
    if (this_present_updDatetime || that_present_updDatetime) {
      if (!(this_present_updDatetime && that_present_updDatetime))
        return false;
      if (!this.updDatetime.equals(that.updDatetime))
        return false;
    }

    boolean this_present_cardId = true && this.isSetCardId();
    boolean that_present_cardId = true && that.isSetCardId();
    if (this_present_cardId || that_present_cardId) {
      if (!(this_present_cardId && that_present_cardId))
        return false;
      if (!this.cardId.equals(that.cardId))
        return false;
    }

    boolean this_present_itemShort = true && this.isSetItemShort();
    boolean that_present_itemShort = true && that.isSetItemShort();
    if (this_present_itemShort || that_present_itemShort) {
      if (!(this_present_itemShort && that_present_itemShort))
        return false;
      if (!this.itemShort.equals(that.itemShort))
        return false;
    }

    boolean this_present_deptId = true && this.isSetDeptId();
    boolean that_present_deptId = true && that.isSetDeptId();
    if (this_present_deptId || that_present_deptId) {
      if (!(this_present_deptId && that_present_deptId))
        return false;
      if (!this.deptId.equals(that.deptId))
        return false;
    }

    boolean this_present_deptName = true && this.isSetDeptName();
    boolean that_present_deptName = true && that.isSetDeptName();
    if (this_present_deptName || that_present_deptName) {
      if (!(this_present_deptName && that_present_deptName))
        return false;
      if (!this.deptName.equals(that.deptName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetVehicled()) ? 131071 : 524287);
    if (isSetVehicled())
      hashCode = hashCode * 8191 + vehicled.hashCode();

    hashCode = hashCode * 8191 + ((isSetAddrd()) ? 131071 : 524287);
    if (isSetAddrd())
      hashCode = hashCode * 8191 + addrd.hashCode();

    hashCode = hashCode * 8191 + ((isSetAddrame()) ? 131071 : 524287);
    if (isSetAddrame())
      hashCode = hashCode * 8191 + addrame.hashCode();

    hashCode = hashCode * 8191 + ((isSetModeld()) ? 131071 : 524287);
    if (isSetModeld())
      hashCode = hashCode * 8191 + modeld.hashCode();

    hashCode = hashCode * 8191 + ((isSetMessageContent()) ? 131071 : 524287);
    if (isSetMessageContent())
      hashCode = hashCode * 8191 + messageContent.hashCode();

    hashCode = hashCode * 8191 + ((isSetMessageLevel()) ? 131071 : 524287);
    if (isSetMessageLevel())
      hashCode = hashCode * 8191 + messageLevel.hashCode();

    hashCode = hashCode * 8191 + ((isSetMessageType()) ? 131071 : 524287);
    if (isSetMessageType())
      hashCode = hashCode * 8191 + messageType.hashCode();

    hashCode = hashCode * 8191 + ((isSetMessageData()) ? 131071 : 524287);
    if (isSetMessageData())
      hashCode = hashCode * 8191 + messageData.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdDatetime()) ? 131071 : 524287);
    if (isSetUpdDatetime())
      hashCode = hashCode * 8191 + updDatetime.hashCode();

    hashCode = hashCode * 8191 + ((isSetCardId()) ? 131071 : 524287);
    if (isSetCardId())
      hashCode = hashCode * 8191 + cardId.hashCode();

    hashCode = hashCode * 8191 + ((isSetItemShort()) ? 131071 : 524287);
    if (isSetItemShort())
      hashCode = hashCode * 8191 + itemShort.hashCode();

    hashCode = hashCode * 8191 + ((isSetDeptId()) ? 131071 : 524287);
    if (isSetDeptId())
      hashCode = hashCode * 8191 + deptId.hashCode();

    hashCode = hashCode * 8191 + ((isSetDeptName()) ? 131071 : 524287);
    if (isSetDeptName())
      hashCode = hashCode * 8191 + deptName.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(VehicleStatus other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetVehicled()).compareTo(other.isSetVehicled());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVehicled()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vehicled, other.vehicled);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAddrd()).compareTo(other.isSetAddrd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddrd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.addrd, other.addrd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAddrame()).compareTo(other.isSetAddrame());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddrame()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.addrame, other.addrame);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetModeld()).compareTo(other.isSetModeld());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModeld()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.modeld, other.modeld);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMessageContent()).compareTo(other.isSetMessageContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMessageContent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.messageContent, other.messageContent);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMessageLevel()).compareTo(other.isSetMessageLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMessageLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.messageLevel, other.messageLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMessageType()).compareTo(other.isSetMessageType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMessageType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.messageType, other.messageType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMessageData()).compareTo(other.isSetMessageData());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMessageData()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.messageData, other.messageData);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpdDatetime()).compareTo(other.isSetUpdDatetime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdDatetime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updDatetime, other.updDatetime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCardId()).compareTo(other.isSetCardId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCardId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cardId, other.cardId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetItemShort()).compareTo(other.isSetItemShort());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetItemShort()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.itemShort, other.itemShort);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDeptId()).compareTo(other.isSetDeptId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeptId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deptId, other.deptId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDeptName()).compareTo(other.isSetDeptName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeptName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deptName, other.deptName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("VehicleStatus(");
    boolean first = true;

    sb.append("vehicled:");
    if (this.vehicled == null) {
      sb.append("null");
    } else {
      sb.append(this.vehicled);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("addrd:");
    if (this.addrd == null) {
      sb.append("null");
    } else {
      sb.append(this.addrd);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("addrame:");
    if (this.addrame == null) {
      sb.append("null");
    } else {
      sb.append(this.addrame);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("modeld:");
    if (this.modeld == null) {
      sb.append("null");
    } else {
      sb.append(this.modeld);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("messageContent:");
    if (this.messageContent == null) {
      sb.append("null");
    } else {
      sb.append(this.messageContent);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("messageLevel:");
    if (this.messageLevel == null) {
      sb.append("null");
    } else {
      sb.append(this.messageLevel);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("messageType:");
    if (this.messageType == null) {
      sb.append("null");
    } else {
      sb.append(this.messageType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("messageData:");
    if (this.messageData == null) {
      sb.append("null");
    } else {
      sb.append(this.messageData);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("updDatetime:");
    if (this.updDatetime == null) {
      sb.append("null");
    } else {
      sb.append(this.updDatetime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cardId:");
    if (this.cardId == null) {
      sb.append("null");
    } else {
      sb.append(this.cardId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("itemShort:");
    if (this.itemShort == null) {
      sb.append("null");
    } else {
      sb.append(this.itemShort);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deptId:");
    if (this.deptId == null) {
      sb.append("null");
    } else {
      sb.append(this.deptId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deptName:");
    if (this.deptName == null) {
      sb.append("null");
    } else {
      sb.append(this.deptName);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class VehicleStatusStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public VehicleStatusStandardScheme getScheme() {
      return new VehicleStatusStandardScheme();
    }
  }

  private static class VehicleStatusStandardScheme extends org.apache.thrift.scheme.StandardScheme<VehicleStatus> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, VehicleStatus struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // VEHICLED
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.vehicled = iprot.readString();
              struct.setVehicledIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ADDRD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.addrd = iprot.readString();
              struct.setAddrdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ADDRAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.addrame = iprot.readString();
              struct.setAddrameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MODELD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.modeld = iprot.readString();
              struct.setModeldIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MESSAGE_CONTENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.messageContent = iprot.readString();
              struct.setMessageContentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MESSAGE_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.messageLevel = iprot.readString();
              struct.setMessageLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // MESSAGE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.messageType = iprot.readString();
              struct.setMessageTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // MESSAGE_DATA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.messageData = iprot.readString();
              struct.setMessageDataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // UPD_DATETIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updDatetime = iprot.readString();
              struct.setUpdDatetimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CARD_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cardId = iprot.readString();
              struct.setCardIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ITEM_SHORT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.itemShort = iprot.readString();
              struct.setItemShortIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // DEPT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deptId = iprot.readString();
              struct.setDeptIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // DEPT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deptName = iprot.readString();
              struct.setDeptNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, VehicleStatus struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.vehicled != null) {
        oprot.writeFieldBegin(VEHICLED_FIELD_DESC);
        oprot.writeString(struct.vehicled);
        oprot.writeFieldEnd();
      }
      if (struct.addrd != null) {
        oprot.writeFieldBegin(ADDRD_FIELD_DESC);
        oprot.writeString(struct.addrd);
        oprot.writeFieldEnd();
      }
      if (struct.addrame != null) {
        oprot.writeFieldBegin(ADDRAME_FIELD_DESC);
        oprot.writeString(struct.addrame);
        oprot.writeFieldEnd();
      }
      if (struct.modeld != null) {
        oprot.writeFieldBegin(MODELD_FIELD_DESC);
        oprot.writeString(struct.modeld);
        oprot.writeFieldEnd();
      }
      if (struct.messageContent != null) {
        oprot.writeFieldBegin(MESSAGE_CONTENT_FIELD_DESC);
        oprot.writeString(struct.messageContent);
        oprot.writeFieldEnd();
      }
      if (struct.messageLevel != null) {
        oprot.writeFieldBegin(MESSAGE_LEVEL_FIELD_DESC);
        oprot.writeString(struct.messageLevel);
        oprot.writeFieldEnd();
      }
      if (struct.messageType != null) {
        oprot.writeFieldBegin(MESSAGE_TYPE_FIELD_DESC);
        oprot.writeString(struct.messageType);
        oprot.writeFieldEnd();
      }
      if (struct.messageData != null) {
        oprot.writeFieldBegin(MESSAGE_DATA_FIELD_DESC);
        oprot.writeString(struct.messageData);
        oprot.writeFieldEnd();
      }
      if (struct.updDatetime != null) {
        oprot.writeFieldBegin(UPD_DATETIME_FIELD_DESC);
        oprot.writeString(struct.updDatetime);
        oprot.writeFieldEnd();
      }
      if (struct.cardId != null) {
        oprot.writeFieldBegin(CARD_ID_FIELD_DESC);
        oprot.writeString(struct.cardId);
        oprot.writeFieldEnd();
      }
      if (struct.itemShort != null) {
        oprot.writeFieldBegin(ITEM_SHORT_FIELD_DESC);
        oprot.writeString(struct.itemShort);
        oprot.writeFieldEnd();
      }
      if (struct.deptId != null) {
        oprot.writeFieldBegin(DEPT_ID_FIELD_DESC);
        oprot.writeString(struct.deptId);
        oprot.writeFieldEnd();
      }
      if (struct.deptName != null) {
        oprot.writeFieldBegin(DEPT_NAME_FIELD_DESC);
        oprot.writeString(struct.deptName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class VehicleStatusTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public VehicleStatusTupleScheme getScheme() {
      return new VehicleStatusTupleScheme();
    }
  }

  private static class VehicleStatusTupleScheme extends org.apache.thrift.scheme.TupleScheme<VehicleStatus> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, VehicleStatus struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetVehicled()) {
        optionals.set(0);
      }
      if (struct.isSetAddrd()) {
        optionals.set(1);
      }
      if (struct.isSetAddrame()) {
        optionals.set(2);
      }
      if (struct.isSetModeld()) {
        optionals.set(3);
      }
      if (struct.isSetMessageContent()) {
        optionals.set(4);
      }
      if (struct.isSetMessageLevel()) {
        optionals.set(5);
      }
      if (struct.isSetMessageType()) {
        optionals.set(6);
      }
      if (struct.isSetMessageData()) {
        optionals.set(7);
      }
      if (struct.isSetUpdDatetime()) {
        optionals.set(8);
      }
      if (struct.isSetCardId()) {
        optionals.set(9);
      }
      if (struct.isSetItemShort()) {
        optionals.set(10);
      }
      if (struct.isSetDeptId()) {
        optionals.set(11);
      }
      if (struct.isSetDeptName()) {
        optionals.set(12);
      }
      oprot.writeBitSet(optionals, 13);
      if (struct.isSetVehicled()) {
        oprot.writeString(struct.vehicled);
      }
      if (struct.isSetAddrd()) {
        oprot.writeString(struct.addrd);
      }
      if (struct.isSetAddrame()) {
        oprot.writeString(struct.addrame);
      }
      if (struct.isSetModeld()) {
        oprot.writeString(struct.modeld);
      }
      if (struct.isSetMessageContent()) {
        oprot.writeString(struct.messageContent);
      }
      if (struct.isSetMessageLevel()) {
        oprot.writeString(struct.messageLevel);
      }
      if (struct.isSetMessageType()) {
        oprot.writeString(struct.messageType);
      }
      if (struct.isSetMessageData()) {
        oprot.writeString(struct.messageData);
      }
      if (struct.isSetUpdDatetime()) {
        oprot.writeString(struct.updDatetime);
      }
      if (struct.isSetCardId()) {
        oprot.writeString(struct.cardId);
      }
      if (struct.isSetItemShort()) {
        oprot.writeString(struct.itemShort);
      }
      if (struct.isSetDeptId()) {
        oprot.writeString(struct.deptId);
      }
      if (struct.isSetDeptName()) {
        oprot.writeString(struct.deptName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, VehicleStatus struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(13);
      if (incoming.get(0)) {
        struct.vehicled = iprot.readString();
        struct.setVehicledIsSet(true);
      }
      if (incoming.get(1)) {
        struct.addrd = iprot.readString();
        struct.setAddrdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.addrame = iprot.readString();
        struct.setAddrameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.modeld = iprot.readString();
        struct.setModeldIsSet(true);
      }
      if (incoming.get(4)) {
        struct.messageContent = iprot.readString();
        struct.setMessageContentIsSet(true);
      }
      if (incoming.get(5)) {
        struct.messageLevel = iprot.readString();
        struct.setMessageLevelIsSet(true);
      }
      if (incoming.get(6)) {
        struct.messageType = iprot.readString();
        struct.setMessageTypeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.messageData = iprot.readString();
        struct.setMessageDataIsSet(true);
      }
      if (incoming.get(8)) {
        struct.updDatetime = iprot.readString();
        struct.setUpdDatetimeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.cardId = iprot.readString();
        struct.setCardIdIsSet(true);
      }
      if (incoming.get(10)) {
        struct.itemShort = iprot.readString();
        struct.setItemShortIsSet(true);
      }
      if (incoming.get(11)) {
        struct.deptId = iprot.readString();
        struct.setDeptIdIsSet(true);
      }
      if (incoming.get(12)) {
        struct.deptName = iprot.readString();
        struct.setDeptNameIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

